import { bindNew } from "../utilities/misc";
import { getArgsArraySlice } from "../utilities/vectorHelpers";
import { defineAccessors, defineSwizzlingN } from "./swizzling";
import vec2 from "./vec2";
import vec3, { ISwizzle3 } from "./vec3";
import vecN from "./vecN";

interface ISwizzle4 extends ISwizzle3 {
  // cSpell: disable
  x: number;
  y: number;
  z: number;
  w: number;
  xx: vec2;
  xy: vec2;
  xz: vec2;
  xw: vec2;
  yx: vec2;
  yy: vec2;
  yz: vec2;
  yw: vec2;
  zx: vec2;
  zy: vec2;
  zz: vec2;
  zw: vec2;
  wx: vec2;
  wy: vec2;
  wz: vec2;
  ww: vec2;
  xxx: vec3;
  xxy: vec3;
  xxz: vec3;
  xxw: vec3;
  xyx: vec3;
  xyy: vec3;
  xyz: vec3;
  xyw: vec3;
  xzx: vec3;
  xzy: vec3;
  xzz: vec3;
  xzw: vec3;
  xwx: vec3;
  xwy: vec3;
  xwz: vec3;
  xww: vec3;
  yxx: vec3;
  yxy: vec3;
  yxz: vec3;
  yxw: vec3;
  yyx: vec3;
  yyy: vec3;
  yyz: vec3;
  yyw: vec3;
  yzx: vec3;
  yzy: vec3;
  yzz: vec3;
  yzw: vec3;
  ywx: vec3;
  ywy: vec3;
  ywz: vec3;
  yww: vec3;
  zxx: vec3;
  zxy: vec3;
  zxz: vec3;
  zxw: vec3;
  zyx: vec3;
  zyy: vec3;
  zyz: vec3;
  zyw: vec3;
  zzx: vec3;
  zzy: vec3;
  zzz: vec3;
  zzw: vec3;
  zwx: vec3;
  zwy: vec3;
  zwz: vec3;
  zww: vec3;
  wxx: vec3;
  wxy: vec3;
  wxz: vec3;
  wxw: vec3;
  wyx: vec3;
  wyy: vec3;
  wyz: vec3;
  wyw: vec3;
  wzx: vec3;
  wzy: vec3;
  wzz: vec3;
  wzw: vec3;
  wwx: vec3;
  wwy: vec3;
  wwz: vec3;
  www: vec3;
  xxxx: vec4;
  xxxy: vec4;
  xxxz: vec4;
  xxxw: vec4;
  xxyx: vec4;
  xxyy: vec4;
  xxyz: vec4;
  xxyw: vec4;
  xxzx: vec4;
  xxzy: vec4;
  xxzz: vec4;
  xxzw: vec4;
  xxwx: vec4;
  xxwy: vec4;
  xxwz: vec4;
  xxww: vec4;
  xyxx: vec4;
  xyxy: vec4;
  xyxz: vec4;
  xyxw: vec4;
  xyyx: vec4;
  xyyy: vec4;
  xyyz: vec4;
  xyyw: vec4;
  xyzx: vec4;
  xyzy: vec4;
  xyzz: vec4;
  xyzw: vec4;
  xywx: vec4;
  xywy: vec4;
  xywz: vec4;
  xyww: vec4;
  xzxx: vec4;
  xzxy: vec4;
  xzxz: vec4;
  xzxw: vec4;
  xzyx: vec4;
  xzyy: vec4;
  xzyz: vec4;
  xzyw: vec4;
  xzzx: vec4;
  xzzy: vec4;
  xzzz: vec4;
  xzzw: vec4;
  xzwx: vec4;
  xzwy: vec4;
  xzwz: vec4;
  xzww: vec4;
  xwxx: vec4;
  xwxy: vec4;
  xwxz: vec4;
  xwxw: vec4;
  xwyx: vec4;
  xwyy: vec4;
  xwyz: vec4;
  xwyw: vec4;
  xwzx: vec4;
  xwzy: vec4;
  xwzz: vec4;
  xwzw: vec4;
  xwwx: vec4;
  xwwy: vec4;
  xwwz: vec4;
  xwww: vec4;
  yxxx: vec4;
  yxxy: vec4;
  yxxz: vec4;
  yxxw: vec4;
  yxyx: vec4;
  yxyy: vec4;
  yxyz: vec4;
  yxyw: vec4;
  yxzx: vec4;
  yxzy: vec4;
  yxzz: vec4;
  yxzw: vec4;
  yxwx: vec4;
  yxwy: vec4;
  yxwz: vec4;
  yxww: vec4;
  yyxx: vec4;
  yyxy: vec4;
  yyxz: vec4;
  yyxw: vec4;
  yyyx: vec4;
  yyyy: vec4;
  yyyz: vec4;
  yyyw: vec4;
  yyzx: vec4;
  yyzy: vec4;
  yyzz: vec4;
  yyzw: vec4;
  yywx: vec4;
  yywy: vec4;
  yywz: vec4;
  yyww: vec4;
  yzxx: vec4;
  yzxy: vec4;
  yzxz: vec4;
  yzxw: vec4;
  yzyx: vec4;
  yzyy: vec4;
  yzyz: vec4;
  yzyw: vec4;
  yzzx: vec4;
  yzzy: vec4;
  yzzz: vec4;
  yzzw: vec4;
  yzwx: vec4;
  yzwy: vec4;
  yzwz: vec4;
  yzww: vec4;
  ywxx: vec4;
  ywxy: vec4;
  ywxz: vec4;
  ywxw: vec4;
  ywyx: vec4;
  ywyy: vec4;
  ywyz: vec4;
  ywyw: vec4;
  ywzx: vec4;
  ywzy: vec4;
  ywzz: vec4;
  ywzw: vec4;
  ywwx: vec4;
  ywwy: vec4;
  ywwz: vec4;
  ywww: vec4;
  zxxx: vec4;
  zxxy: vec4;
  zxxz: vec4;
  zxxw: vec4;
  zxyx: vec4;
  zxyy: vec4;
  zxyz: vec4;
  zxyw: vec4;
  zxzx: vec4;
  zxzy: vec4;
  zxzz: vec4;
  zxzw: vec4;
  zxwx: vec4;
  zxwy: vec4;
  zxwz: vec4;
  zxww: vec4;
  zyxx: vec4;
  zyxy: vec4;
  zyxz: vec4;
  zyxw: vec4;
  zyyx: vec4;
  zyyy: vec4;
  zyyz: vec4;
  zyyw: vec4;
  zyzx: vec4;
  zyzy: vec4;
  zyzz: vec4;
  zyzw: vec4;
  zywx: vec4;
  zywy: vec4;
  zywz: vec4;
  zyww: vec4;
  zzxx: vec4;
  zzxy: vec4;
  zzxz: vec4;
  zzxw: vec4;
  zzyx: vec4;
  zzyy: vec4;
  zzyz: vec4;
  zzyw: vec4;
  zzzx: vec4;
  zzzy: vec4;
  zzzz: vec4;
  zzzw: vec4;
  zzwx: vec4;
  zzwy: vec4;
  zzwz: vec4;
  zzww: vec4;
  zwxx: vec4;
  zwxy: vec4;
  zwxz: vec4;
  zwxw: vec4;
  zwyx: vec4;
  zwyy: vec4;
  zwyz: vec4;
  zwyw: vec4;
  zwzx: vec4;
  zwzy: vec4;
  zwzz: vec4;
  zwzw: vec4;
  zwwx: vec4;
  zwwy: vec4;
  zwwz: vec4;
  zwww: vec4;
  wxxx: vec4;
  wxxy: vec4;
  wxxz: vec4;
  wxxw: vec4;
  wxyx: vec4;
  wxyy: vec4;
  wxyz: vec4;
  wxyw: vec4;
  wxzx: vec4;
  wxzy: vec4;
  wxzz: vec4;
  wxzw: vec4;
  wxwx: vec4;
  wxwy: vec4;
  wxwz: vec4;
  wxww: vec4;
  wyxx: vec4;
  wyxy: vec4;
  wyxz: vec4;
  wyxw: vec4;
  wyyx: vec4;
  wyyy: vec4;
  wyyz: vec4;
  wyyw: vec4;
  wyzx: vec4;
  wyzy: vec4;
  wyzz: vec4;
  wyzw: vec4;
  wywx: vec4;
  wywy: vec4;
  wywz: vec4;
  wyww: vec4;
  wzxx: vec4;
  wzxy: vec4;
  wzxz: vec4;
  wzxw: vec4;
  wzyx: vec4;
  wzyy: vec4;
  wzyz: vec4;
  wzyw: vec4;
  wzzx: vec4;
  wzzy: vec4;
  wzzz: vec4;
  wzzw: vec4;
  wzwx: vec4;
  wzwy: vec4;
  wzwz: vec4;
  wzww: vec4;
  wwxx: vec4;
  wwxy: vec4;
  wwxz: vec4;
  wwxw: vec4;
  wwyx: vec4;
  wwyy: vec4;
  wwyz: vec4;
  wwyw: vec4;
  wwzx: vec4;
  wwzy: vec4;
  wwzz: vec4;
  wwzw: vec4;
  wwwx: vec4;
  wwwy: vec4;
  wwwz: vec4;
  wwww: vec4;
  // cSpell: enable
}

type vec4 = _vec4;
class _vec4 extends vecN implements ISwizzle4 {
  // cSpell: disable
  x: number;
  y: number;
  z: number;
  w: number;
  xx: vec2;
  xy: vec2;
  xz: vec2;
  xw: vec2;
  yx: vec2;
  yy: vec2;
  yz: vec2;
  yw: vec2;
  zx: vec2;
  zy: vec2;
  zz: vec2;
  zw: vec2;
  wx: vec2;
  wy: vec2;
  wz: vec2;
  ww: vec2;
  xxx: vec3;
  xxy: vec3;
  xxz: vec3;
  xxw: vec3;
  xyx: vec3;
  xyy: vec3;
  xyz: vec3;
  xyw: vec3;
  xzx: vec3;
  xzy: vec3;
  xzz: vec3;
  xzw: vec3;
  xwx: vec3;
  xwy: vec3;
  xwz: vec3;
  xww: vec3;
  yxx: vec3;
  yxy: vec3;
  yxz: vec3;
  yxw: vec3;
  yyx: vec3;
  yyy: vec3;
  yyz: vec3;
  yyw: vec3;
  yzx: vec3;
  yzy: vec3;
  yzz: vec3;
  yzw: vec3;
  ywx: vec3;
  ywy: vec3;
  ywz: vec3;
  yww: vec3;
  zxx: vec3;
  zxy: vec3;
  zxz: vec3;
  zxw: vec3;
  zyx: vec3;
  zyy: vec3;
  zyz: vec3;
  zyw: vec3;
  zzx: vec3;
  zzy: vec3;
  zzz: vec3;
  zzw: vec3;
  zwx: vec3;
  zwy: vec3;
  zwz: vec3;
  zww: vec3;
  wxx: vec3;
  wxy: vec3;
  wxz: vec3;
  wxw: vec3;
  wyx: vec3;
  wyy: vec3;
  wyz: vec3;
  wyw: vec3;
  wzx: vec3;
  wzy: vec3;
  wzz: vec3;
  wzw: vec3;
  wwx: vec3;
  wwy: vec3;
  wwz: vec3;
  www: vec3;
  xxxx: vec4;
  xxxy: vec4;
  xxxz: vec4;
  xxxw: vec4;
  xxyx: vec4;
  xxyy: vec4;
  xxyz: vec4;
  xxyw: vec4;
  xxzx: vec4;
  xxzy: vec4;
  xxzz: vec4;
  xxzw: vec4;
  xxwx: vec4;
  xxwy: vec4;
  xxwz: vec4;
  xxww: vec4;
  xyxx: vec4;
  xyxy: vec4;
  xyxz: vec4;
  xyxw: vec4;
  xyyx: vec4;
  xyyy: vec4;
  xyyz: vec4;
  xyyw: vec4;
  xyzx: vec4;
  xyzy: vec4;
  xyzz: vec4;
  xyzw: vec4;
  xywx: vec4;
  xywy: vec4;
  xywz: vec4;
  xyww: vec4;
  xzxx: vec4;
  xzxy: vec4;
  xzxz: vec4;
  xzxw: vec4;
  xzyx: vec4;
  xzyy: vec4;
  xzyz: vec4;
  xzyw: vec4;
  xzzx: vec4;
  xzzy: vec4;
  xzzz: vec4;
  xzzw: vec4;
  xzwx: vec4;
  xzwy: vec4;
  xzwz: vec4;
  xzww: vec4;
  xwxx: vec4;
  xwxy: vec4;
  xwxz: vec4;
  xwxw: vec4;
  xwyx: vec4;
  xwyy: vec4;
  xwyz: vec4;
  xwyw: vec4;
  xwzx: vec4;
  xwzy: vec4;
  xwzz: vec4;
  xwzw: vec4;
  xwwx: vec4;
  xwwy: vec4;
  xwwz: vec4;
  xwww: vec4;
  yxxx: vec4;
  yxxy: vec4;
  yxxz: vec4;
  yxxw: vec4;
  yxyx: vec4;
  yxyy: vec4;
  yxyz: vec4;
  yxyw: vec4;
  yxzx: vec4;
  yxzy: vec4;
  yxzz: vec4;
  yxzw: vec4;
  yxwx: vec4;
  yxwy: vec4;
  yxwz: vec4;
  yxww: vec4;
  yyxx: vec4;
  yyxy: vec4;
  yyxz: vec4;
  yyxw: vec4;
  yyyx: vec4;
  yyyy: vec4;
  yyyz: vec4;
  yyyw: vec4;
  yyzx: vec4;
  yyzy: vec4;
  yyzz: vec4;
  yyzw: vec4;
  yywx: vec4;
  yywy: vec4;
  yywz: vec4;
  yyww: vec4;
  yzxx: vec4;
  yzxy: vec4;
  yzxz: vec4;
  yzxw: vec4;
  yzyx: vec4;
  yzyy: vec4;
  yzyz: vec4;
  yzyw: vec4;
  yzzx: vec4;
  yzzy: vec4;
  yzzz: vec4;
  yzzw: vec4;
  yzwx: vec4;
  yzwy: vec4;
  yzwz: vec4;
  yzww: vec4;
  ywxx: vec4;
  ywxy: vec4;
  ywxz: vec4;
  ywxw: vec4;
  ywyx: vec4;
  ywyy: vec4;
  ywyz: vec4;
  ywyw: vec4;
  ywzx: vec4;
  ywzy: vec4;
  ywzz: vec4;
  ywzw: vec4;
  ywwx: vec4;
  ywwy: vec4;
  ywwz: vec4;
  ywww: vec4;
  zxxx: vec4;
  zxxy: vec4;
  zxxz: vec4;
  zxxw: vec4;
  zxyx: vec4;
  zxyy: vec4;
  zxyz: vec4;
  zxyw: vec4;
  zxzx: vec4;
  zxzy: vec4;
  zxzz: vec4;
  zxzw: vec4;
  zxwx: vec4;
  zxwy: vec4;
  zxwz: vec4;
  zxww: vec4;
  zyxx: vec4;
  zyxy: vec4;
  zyxz: vec4;
  zyxw: vec4;
  zyyx: vec4;
  zyyy: vec4;
  zyyz: vec4;
  zyyw: vec4;
  zyzx: vec4;
  zyzy: vec4;
  zyzz: vec4;
  zyzw: vec4;
  zywx: vec4;
  zywy: vec4;
  zywz: vec4;
  zyww: vec4;
  zzxx: vec4;
  zzxy: vec4;
  zzxz: vec4;
  zzxw: vec4;
  zzyx: vec4;
  zzyy: vec4;
  zzyz: vec4;
  zzyw: vec4;
  zzzx: vec4;
  zzzy: vec4;
  zzzz: vec4;
  zzzw: vec4;
  zzwx: vec4;
  zzwy: vec4;
  zzwz: vec4;
  zzww: vec4;
  zwxx: vec4;
  zwxy: vec4;
  zwxz: vec4;
  zwxw: vec4;
  zwyx: vec4;
  zwyy: vec4;
  zwyz: vec4;
  zwyw: vec4;
  zwzx: vec4;
  zwzy: vec4;
  zwzz: vec4;
  zwzw: vec4;
  zwwx: vec4;
  zwwy: vec4;
  zwwz: vec4;
  zwww: vec4;
  wxxx: vec4;
  wxxy: vec4;
  wxxz: vec4;
  wxxw: vec4;
  wxyx: vec4;
  wxyy: vec4;
  wxyz: vec4;
  wxyw: vec4;
  wxzx: vec4;
  wxzy: vec4;
  wxzz: vec4;
  wxzw: vec4;
  wxwx: vec4;
  wxwy: vec4;
  wxwz: vec4;
  wxww: vec4;
  wyxx: vec4;
  wyxy: vec4;
  wyxz: vec4;
  wyxw: vec4;
  wyyx: vec4;
  wyyy: vec4;
  wyyz: vec4;
  wyyw: vec4;
  wyzx: vec4;
  wyzy: vec4;
  wyzz: vec4;
  wyzw: vec4;
  wywx: vec4;
  wywy: vec4;
  wywz: vec4;
  wyww: vec4;
  wzxx: vec4;
  wzxy: vec4;
  wzxz: vec4;
  wzxw: vec4;
  wzyx: vec4;
  wzyy: vec4;
  wzyz: vec4;
  wzyw: vec4;
  wzzx: vec4;
  wzzy: vec4;
  wzzz: vec4;
  wzzw: vec4;
  wzwx: vec4;
  wzwy: vec4;
  wzwz: vec4;
  wzww: vec4;
  wwxx: vec4;
  wwxy: vec4;
  wwxz: vec4;
  wwxw: vec4;
  wwyx: vec4;
  wwyy: vec4;
  wwyz: vec4;
  wwyw: vec4;
  wwzx: vec4;
  wwzy: vec4;
  wwzz: vec4;
  wwzw: vec4;
  wwwx: vec4;
  wwwy: vec4;
  wwwz: vec4;
  wwww: vec4;
  // cSpell:enable

  constructor(domPointInit: DOMPointInit);
  constructor(...args: (number | Iterable<number>)[]);
  constructor(...args: unknown[]) {
    super();
    this._array = getArgsArraySlice(4)(args);
    defineAccessors(this, 4);
    defineSwizzlingN(this, 4, 2, vec2);
    defineSwizzlingN(this, 4, 3, vec3);
    defineSwizzlingN(this, 4, 4, vec4);
  }

  cross(other: vec4): vec4 {
    return new vec4(
      this.y * other.z - this.z * other.y,
      this.z * other.x - this.x * other.z,
      this.x * other.y - this.y * other.x,
      1
    );
  }
}
const vec4 = bindNew(_vec4);

export default vec4;
export { ISwizzle4 };
